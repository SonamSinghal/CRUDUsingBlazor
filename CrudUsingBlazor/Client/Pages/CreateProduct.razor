@page "/createProduct"
@inject IProductsService _productsService
@inject NavigationManager NavigationManager

<h3>Create Product</h3>
<hr />

<div class="container" style="width:50%;">
    <EditForm Model="@Product" OnValidSubmit="@HandleSubmit">

        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="form-group">
            <label>Name:</label>
            <InputText class="form-control" @bind-Value="Product.Name"></InputText><br />
        </div>

        <div class="form-group">
            <label>Description:</label>
            <InputText class="form-control" @bind-Value="Product.Description"></InputText> <br />
        </div>

        <div class="form-group">
            <label>Category:</label>
            <InputSelect class="form-control" @bind-Value="Product.Category">
                <option selected>Select Category</option>
                @foreach (var item in Enum.GetValues(typeof(Category)))
                {
                    <option value="@item">@item</option>
                }
            </InputSelect> <br />
        </div>

        <div class="form-group">
            <label>Cost:</label>
            <InputNumber class="form-control" @bind-Value="Product.Cost"></InputNumber> <br />
        </div>

        <div class="form-group">
            <label>Quantity:</label>
            <InputNumber class="form-control" @bind-Value="Product.Quantity"></InputNumber> <br />
        </div>

        <button type="submit" class="btn btn-primary">Submit</button>
    </EditForm>
</div>

@code {

    private ProductModel Product = new ProductModel();

    private async Task HandleSubmit()
    {
        await _productsService.CreateProductAsync(Product);
        NavigationManager.NavigateTo("allProducts");
    }

}
